{
  "Outputs": {
  },
  "Parameters": {
    "DockerRPM": {
      "Default": "https:\/\/s3.amazonaws.com\/elasticbeanstalk-env-resources-us-east-1\/stalks\/eb_docker_2.11.2\/lib\/docker-1.0.0-1.15.amzn1.x86_64.rpm",
      "NoEcho": "false",
      "Description": "Docker rpm",
      "Type": "String"
    },
    "InstanceType": {
      "Default": "t1.micro",
      "NoEcho": "false",
      "Description": "WebServer EC2 instance type",
      "AllowedValues": [
        "t1.micro",
        "m1.small",
        "m3.medium",
        "m3.large",
        "m3.xlarge"
      ],
      "Type": "String",
      "ConstraintDescription": "valid General Purpose EC2 instance: t1.micro, m1.small, m3.medium, m3.large, m3.xlarge"
    },
    "DockerDEB": {
      "Default": "",
      "NoEcho": "false",
      "Description": "Docker deb",
      "Type": "String"
    },
    "DockerProxyServer": {
      "Default": "nginx",
      "NoEcho": "false",
      "AllowedValues": [
        "nginx",
        "none"
      ],
      "Description": "Specifies which proxy server to be used for client connections.",
      "Type": "String"
    },
    "AppSource": {
      "Default": "",
      "NoEcho": "false",
      "Description": "Application Source",
      "Type": "String"
    },
    "EnvironmentVariables": {
      "Default": "AWS_ACCESS_KEY_ID=,AWS_SECRET_KEY=",
      "NoEcho": "false",
      "Description": "Program environment variables.",
      "Type": "CommaDelimitedList"
    }
  },
  "Description": "AWS Fulfillment Docker Instance Template",
  "Mappings": {
    "EnvironmentInfoTasks": {
      "systemtail": {
        "AutoClean": "true",
        "CommandName": "CMD-SystemTailLogs",
        "LocationPrefix": "resources\/environments\/logs\/systemtail\/"
      },
      "bundle": {
        "CommandName": "CMD-BundleLogs",
        "LocationPrefix": "resources\/environments\/logs\/bundle\/"
      },
      "publish": {
        "LocationPrefix": "resources\/environments\/logs\/publish\/"
      },
      "tail": {
        "AutoClean": "true",
        "CommandName": "CMD-TailLogs",
        "LocationPrefix": "resources\/environments\/logs\/tail\/"
      }
    },
    "AWSEBOptions": {
      "options": {
        "FastVersionDeployment": "true",
        "nodeploymentOnStartup": "true",
        "EnvironmentType": "SingleInstance",
        "CloudConfigOptions": "",
        "HaltStartupCommandsOnFailure": "true",
        "ebrpm": "https:\/\/s3.amazonaws.com\/elasticbeanstalk-env-resources-us-east-1\/stalks\/eb_docker_2.11.2\/lib\/aws-elasticbeanstalk-tools-1.12-1.noarch.rpm",
        "EnvironmentTier": [
          {
            "Name": "Worker",
            "Type": "SQS\/HTTP",
            "Version": "1.1"
          }
        ],
        "cfnrpm": "https:\/\/s3.amazonaws.com\/elasticbeanstalk-env-resources-us-east-1\/stalks\/eb_docker_2.11.2\/lib\/python-certifi-0.0.8-2.3.amzn1.noarch.rpm https:\/\/s3.amazonaws.com\/elasticbeanstalk-env-resources-us-east-1\/stalks\/eb_docker_2.11.2\/lib\/aws-cfn-bootstrap-1.4-b165.noarch.rpm",
        "DefaultSSHPort": "22",
        "UserDataScript": "https:\/\/s3.amazonaws.com\/elasticbeanstalk-env-resources-us-east-1\/stalks\/eb_docker_2.11.2\/lib\/UserDataScript.sh",
        "requests": "https:\/\/s3.amazonaws.com\/elasticbeanstalk-env-resources-us-east-1\/stalks\/eb_docker_2.11.2\/lib\/requests-0.13.5.tar.gz#md5=805fd122b4cfd224e15ff2f5288c5ba0",
        "DefaultsScript": "\/opt\/elasticbeanstalk\/containerfiles\/support\/container_defaults.py",
        "LeaderTestScript": "\/opt\/elasticbeanstalk\/bin\/leader-test.sh",
        "LaunchType": "Migration",
        "downloadSourceBundleScriptLocation": [
          "https:\/\/s3.amazonaws.com\/elasticbeanstalk-env-resources-us-east-1\/eb_patching_resources\/download_source_bundle.py"
        ],
        "EmbeddedConfigsetsEnabled": "true"
      }
    },
    "AWSEBAWSRegionArch2AMI": {
      "us-east-1": {
        "64": "ami-b2d529da"
      },
      "us-west-1": {
        "64": "ami-aa9493ef"
      },
      "us-west-2": {
        "64": "ami-e35c21d3"
      }
    },
    "AWSEBAWSInstanceType2Arch": {
      "t1.micro": {
        "Arch": "64"
      },
      "m1.small": {
        "Arch": "64"
      },
      "m3.medium": {
        "Arch": "64"
      },
      "m3.large": {
        "Arch": "64"
      },
      "m3.xlarge": {
        "Arch": "64"
      }
    }
  },
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "AWSEBAutoScalingLaunchConfiguration": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "IamInstanceProfile": "LaunchConfig_WebApp",
        "ImageId": {
          "Fn::FindInMap": [
            "AWSEBAWSRegionArch2AMI",
            {
              "Ref": "AWS::Region"
            },
            {
              "Fn::FindInMap": [
                "AWSEBAWSInstanceType2Arch",
                {
                  "Ref": "InstanceType"
                },
                "Arch"
              ]
            }
          ]
        },
        "InstanceMonitoring": false,
        "SecurityGroups": [
          {
            "Ref": "AWSEBSecurityGroup"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "Content-Type: multipart\/mixed; boundary=\"===============5189065377222898407==\"",
                "\n",
                "MIME-Version: 1.0",
                "\n",
                "",
                "\n",
                "--===============5189065377222898407==",
                "\n",
                "Content-Type: text\/cloud-config; charset=\"us-ascii\"",
                "\n",
                "MIME-Version: 1.0",
                "\n",
                "Content-Transfer-Encoding: 7bit",
                "\n",
                "Content-Disposition: attachment; filename=\"cloud-config.txt\"",
                "\n",
                "",
                "\n",
                "#cloud-config",
                "\n",
                "repo_upgrade: none",
                "\n",
                "repo_releasever: 2014.03",
                "\n",
                {
                  "Fn::FindInMap": [
                    "AWSEBOptions",
                    "options",
                    "CloudConfigOptions"
                  ]
                },
                "\n",
                "",
                "\n",
                "--===============5189065377222898407==",
                "\n",
                "Content-Type: text\/x-shellscript; charset=\"us-ascii\"",
                "\n",
                "MIME-Version: 1.0",
                "\n",
                "Content-Transfer-Encoding: 7bit",
                "\n",
                "Content-Disposition: attachment; filename=\"user-data.txt\"",
                "\n\n",
                "#!\/bin\/bash",
                "\n",
                "exec > >(tee -a \/var\/log\/eb-cfn-init.log|logger -t [eb-cfn-init] -s 2>\/dev\/console) 2>&1",
                "\n",
                "set -x",
                "\n",
                "\n\n",
                "function sleep_delay ",
                "\n",
                "{",
                "\n",
                "  if (( $SLEEP_TIME < $SLEEP_TIME_MAX )); then ",
                "\n",
                "    echo Sleeping $SLEEP_TIME",
                "\n",
                "    sleep $SLEEP_TIME  ",
                "\n",
                "    SLEEP_TIME=$(($SLEEP_TIME * 2)) ",
                "\n",
                "  else ",
                "\n",
                "    echo Sleeping $SLEEP_TIME_MAX  ",
                "\n",
                "    sleep $SLEEP_TIME_MAX  ",
                "\n",
                "  fi",
                "\n",
                "}",
                "\n\n",
                "# Executing bootstrap script",
                "\n",
                "SLEEP_TIME=10",
                "\n",
                "SLEEP_TIME_MAX=3600",
                "\n",
                "while true; do ",
                "\n",
                "  curl ",
                {
                  "Fn::FindInMap": [
                    "AWSEBOptions",
                    "options",
                    "UserDataScript"
                  ]
                },
                " > \/tmp\/ebbootstrap.sh ",
                "\n",
                "  RESULT=$?",
                "\n",
                "  if [[ \"$RESULT\" -ne 0 ]]; then ",
                "\n",
                "    sleep_delay ",
                "\n",
                "  else",
                "\n",
                "    \/bin\/bash \/tmp\/ebbootstrap.sh ",
                "    '",
                {
                  "Fn::FindInMap": [
                    "AWSEBOptions",
                    "options",
                    "requests"
                  ]
                },
                "'",
                "    '",
                {
                  "Fn::FindInMap": [
                    "AWSEBOptions",
                    "options",
                    "cfnrpm"
                  ]
                },
                "'",
                "    '",
                {
                  "Ref": "AWSEBInstanceLaunchWaitHandle"
                },
                "'",
                "    '",
                {
                  "Ref": "AWS::StackId"
                },
                "'",
                "    '",
                {
                  "Ref": "AWS::Region"
                },
                "'",
                "    & ",
                "\n",
                "    exit 0  ",
                "\n",
                "  fi ",
                "\n",
                "done",
                "\n\n",
                "--===============5189065377222898407==-- "
              ]
            ]
          }
        },
        "KeyName": "paul-ami-pair",
        "InstanceType": {
          "Ref": "InstanceType"
        }
      }
    },
    "AWSEBInstanceLaunchWaitCondition": {
      "Type": "AWS::CloudFormation::WaitCondition",
      "DependsOn": "AWSEBAutoScalingGroup",
      "Properties": {
        "Handle": {
          "Ref": "AWSEBInstanceLaunchWaitHandle"
        },
        "Timeout": "1200",
        "Count": 1
      }
    },
    "AWSEBWorkerDeadLetterQueue": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "MessageRetentionPeriod": 1209600
      }
    },
    "AWSEBAutoScalingGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Metadata": {
        "AWS::ElasticBeanstalk::Ext": {
          "_EnvironmentInfoTaskMapping": "EnvironmentInfoTasks",
          "_TriggersConfig": {
            "applicationDeploy": {
              "_Command": "CMD-AppDeploy",
              "_WatchGroups": [
                "_TriggerAppDeployment"
              ]
            },
            "configDeploy": {
              "_Command": "CMD-ConfigDeploy",
              "_WatchGroups": [
                "_TriggerConfigDeployment"
              ]
            }
          },
          "_ParameterTriggers": {
            "_TriggerAppDeployment": [
              "AppSource"
            ],
           "_TriggerConfigDeployment": [
              "EnvironmentVariables",
              "DockerProxyServer"
            ]
          },
          "_ContainerConfigFileContent": {
            "docker": {
              "deb": {
                "Ref": "DockerDEB"
              },
              "rpm": {
                "Ref": "DockerRPM"
              },
              "env": {
                "Ref": "EnvironmentVariables"
              },
              "proxyserver": {
                "Ref": "DockerProxyServer"
              }
            }
          },
          "_LaunchS3URL": "https:\/\/s3.amazonaws.com\/elasticbeanstalk-us-east-1-596229110736\/resources\/environments\/e-fucvpi5vsv\/fulfillment-env_LaunchFile",
          "_API": {
            "_Commands": {
              "CMD-BundleLogs": {
                "_Stages": {
                  "01_enact": [
                    "InfoTask-BundleLogs"
                  ]
                }
              },
              "CMD-ConfigDeploy": {
                "_Stages": {
                  "02_enact": [
                    "Hook-EnactConfigDeploy",
                    "Hook-PostConfigDeploy"
                  ],
                  "01_pre": [
                    "Infra-WriteRuntimeConfig",
                    "Hook-PreConfigDeploy"
                  ]
                },
                "_RunStaged": "true"
              },
              "CMD-SystemTailLogs": {
                "_Stages": {
                  "01_enact": [
                    "InfoTask-SystemTailLogs"
                  ]
                }
              },
              "CMD-TailLogs": {
                "_Stages": {
                  "01_enact": [
                    "InfoTask-TailLogs"
                  ]
                }
              },
              "CMD-Startup": {
                "_Stages": {
                  "02_enact": [
                    "Hook-EnactAppDeploy",
                    "Hook-PostAppDeploy",
                    "Hook-PostInit",
                    "Infra-WriteVersionOnStartup"
                  ],
                  "01_pre": [
                    "Infra-EmbeddedPreBuild",
                    "Hook-PreAppDeploy",
                    "Infra-EmbeddedPostBuild"
                  ]
                },
                "_RunStaged": "true"
              },
              "CMD-RestartAppServer": {
                "_Stages": {
                  "02_enact": [
                    "Hook-EnactRestartAppServer",
                    "Hook-PostRestartAppServer"
                  ],
                  "01_enact": [
                    "Infra-WriteRuntimeConfig",
                    "Hook-PreRestartAppServer"
                  ]
                },
                "_RunStaged": "false"
              },
              "CMD-AppDeploy": {
                "_Stages": {
                  "02_enact": [
                    "Hook-EnactAppDeploy",
                    "Hook-PostAppDeploy"
                  ],
                  "01_pre": [
                    "Infra-WriteRuntimeConfig",
                    "Infra-WriteApplication1",
                    "Infra-WriteApplication2",
                    "Infra-EmbeddedPreBuild",
                    "Hook-PreAppDeploy",
                    "Infra-EmbeddedPostBuild"
                  ]
                },
                "_RunStaged": "true"
              }
            }
          },
          "AvailabilityZoneCount": "Any",
          "_AppSourceUrlFileContent": {
            "url": {
              "Ref": "AppSource"
            }
          }
        },
        "AWS::CloudFormation::Init": {
          "Infra-WriteApplication1": {
            "commands": {
              "01mkdir": {
                "command": "rm -rf \/opt\/elasticbeanstalk\/deploy\/appsource\/; mkdir -p \/opt\/elasticbeanstalk\/deploy\/appsource\/"
              }
            }
          },
          "Infra-WriteBundleLogsConf": {
            "files": {
              "\/opt\/elasticbeanstalk\/tasks\/bundlelogs.d\/eb-system.conf": {
                "content": {
                  "Fn::Join": [
                    "\n",
                    [
                      "\/var\/log\/eb-cfn-hup-call*",
                      "\/var\/log\/eb-cfn-init-call*",
                      "\/var\/log\/eb-cfn-init*",
                      "\/var\/log\/eb-tools*",
                      "\/var\/log\/eb-publish-logs*",
                      "\/var\/log\/directory-hooks-executor*",
                      ""
                    ]
                  ]
                },
                "mode": "000644"
              },
              "\/opt\/elasticbeanstalk\/tasks\/bundlelogs.d\/cfn-system.conf": {
                "content": {
                  "Fn::Join": [
                    "\n",
                    [
                      "\/var\/log\/cfn-hup*",
                      "\/var\/log\/cfn-init*",
                      ""
                    ]
                  ]
                },
                "mode": "000644"
              },
              "\/opt\/elasticbeanstalk\/tasks\/bundlelogs.d\/eb-version-deployment.conf": {
                "content": {
                  "Fn::Join": [
                    "\n",
                    [
                      "\/var\/log\/eb-version-deployment.log",
                      ""
                    ]
                  ]
                }
              },
              "\/opt\/elasticbeanstalk\/tasks\/bundlelogs.d\/cloud-init-system.conf": {
                "content": {
                  "Fn::Join": [
                    "\n",
                    [
                      "\/var\/log\/cloud-init*",
                      ""
                    ]
                  ]
                },
                "mode": "000644"
              },
              "\/opt\/elasticbeanstalk\/tasks\/bundlelogs.d\/system.conf": {
                "content": {
                  "Fn::Join": [
                    "\n",
                    [
                      "\/var\/log\/cron",
                      "\/var\/log\/messages",
                      "\/var\/log\/yum.log",
                      ""
                    ]
                  ]
                },
                "mode": "000644"
              }
            }
          },
          "AWSEBTools": {
            "packages": {
              "python": {
                "requests": "0.13.5",
                "tailer": "https:\/\/s3.amazonaws.com\/elasticbeanstalk-env-resources-us-east-1\/stalks\/eb_docker_2.11.2\/lib\/tailer-0.3.tar.gz#md5=9d1fc073e48ca682786d50c077e823ce"
              },
              "rpm": {
                "aws-elasticbeanstalk-tools": {
                  "Fn::FindInMap": [
                    "AWSEBOptions",
                    "options",
                    "ebrpm"
                  ]
                }
              }
            }
          },
          "DockerContainerTailLogs": {
            "commands": {
              "00dockerps": {
                "command": "echo \"'docker ps' ran at `date`: \" >> \/var\/log\/docker-ps.log && docker ps >> \/var\/log\/docker-ps.log"
              }
            }
          },
          "Hook-PostConfigDeploy": {
            "commands": {
              "hooks": {
                "command": "directoryHooksExecutor.py --path \/opt\/elasticbeanstalk\/hooks\/configdeploy\/post\/"
              }
            }
          },
          "Infra-WriteApplication2": {
            "files": {
              "\/opt\/elasticbeanstalk\/bin\/download_source_bundle": {
                "source": {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::FindInMap": [
                        "AWSEBOptions",
                        "options",
                        "downloadSourceBundleScriptLocation"
                      ]
                    }
                  ]
                },
                "owner": "root",
                "group": "root",
                "mode": "000750"
              }
            },
            "commands": {
              "01downloadVersion": {
                "command": "\/opt\/elasticbeanstalk\/bin\/download_source_bundle"
              },
              "02deleteVersionDownloadScriptFile": {
                "command": "rm \/opt\/elasticbeanstalk\/bin\/download_source_bundle"
              }
            }
          },
          "Hook-EnactAppDeploy": {
            "commands": {
              "hooks": {
                "command": "directoryHooksExecutor.py --path \/opt\/elasticbeanstalk\/hooks\/appdeploy\/enact\/"
              }
            }
          },
          "DockerContainerInstallBundleLogsConf": {
            "files": {
              "\/opt\/elasticbeanstalk\/tasks\/bundlelogs.d\/docker.conf": {
                "content": {
                  "Fn::Join": [
                    "\n",
                    [
                      "\/var\/log\/eb-docker\/containers\/eb-current-app\/*",
                      "\/var\/log\/docker-events.log*",
                      "\/var\/log\/docker-ps.log*",
                      "\/var\/log\/nginx\/*",
                      ""
                    ]
                  ]
                },
                "mode": "000644"
              }
            }
          },
          "Infra-WriteVersionOnStartup": {
            "commands": {
              "01writeversion": {
                "command": "getMetadata.py --resource AWSEBBeanstalkMetadata --path AWS::ElasticBeanstalk::Metadata.Version > \/etc\/elasticbeanstalk\/.aws-eb-startup-version"
              }
            }
          },
          "Hook-PreAppDeploy": {
            "commands": {
              "hooks": {
                "command": "directoryHooksExecutor.py --path \/opt\/elasticbeanstalk\/hooks\/appdeploy\/pre\/"
              }
            }
          },
          "configSets": {
            "Infra-WriteApplication1": [
              "Infra-WriteApplication1"
            ],
            "_OnInstanceBoot": [
              "DockerContainerInstallHooksPkg",
              "DockerContainerInstallTailLogsConf",
              "DockerContainerInstallSystemTailLogsConf",
              "DockerContainerInstallBundleLogsConf",
              "DockerContainerInstallPublishLogsConf",
              "LockRepoToGuid",
              "AWSEBTools",
              "AWSEBBaseConfig",
              "AWSEBCfnHup",
              "Infra-WriteLeaderTestScript",
              "Infra-WriteRuntimeConfig",
              "Infra-WriteApplication1",
              "Infra-WriteApplication2",
              "Infra-WriteTailLogsConf",
              "Infra-WriteSystemTailLogsConf",
              "Infra-WriteBundleLogsConf",
              "Infra-WritePublishLogsConf",
              "Infra-WritePublishLogsCron"
            ],
            "Infra-WriteBundleLogsConf": [
              "Infra-WriteBundleLogsConf"
            ],
            "Infra-EmbeddedPostBuild": [
            ],
            "Hook-PostConfigDeploy": [
              "Hook-PostConfigDeploy"
            ],
            "Infra-WriteApplication2": [
              "Infra-WriteApplication2"
            ],
            "_AppInstall": [
              "Hook-PreInit",
              "Hook-PreAppDeploy",
              "Hook-EnactAppDeploy",
              "Hook-PostAppDeploy",
              "Hook-PostInit"
            ],
            "Hook-EnactAppDeploy": [
              "Hook-EnactAppDeploy"
            ],
            "Infra-EmbeddedPreBuild": [
            ],
            "Infra-WriteVersionOnStartup": [
              "Infra-WriteVersionOnStartup"
            ],
            "Hook-PreAppDeploy": [
              "Hook-PreAppDeploy"
            ],
            "Hook-PreRestartAppServer": [
              "Hook-PreRestartAppServer"
            ],
            "Hook-EnactRestartAppServer": [
              "Hook-EnactRestartAppServer"
            ],
            "Infra-WriteSystemTailLogsConf": [
              "Infra-WriteSystemTailLogsConf"
            ],
            "Infra-WriteRuntimeConfig": [
              "Infra-WriteRuntimeConfig"
            ],
            "Hook-PostRestartAppServer": [
              "Hook-PostRestartAppServer"
            ],
            "Hook-PreInit": [
              "Hook-PreInit"
            ],
            "Infra-WritePublishLogsCron": [
              "Infra-WritePublishLogsCron"
            ],
            "InfoTask-TailLogs": [
              "DockerContainerTailLogs",
              "InfoTask-TailLogs"
            ],
            "_OnInstanceReboot": [
              "AWSEBTools",
              "AWSEBBaseConfig",
              "AWSEBCfnHup",
              "Infra-WriteRuntimeConfig",
              "Infra-WriteApplication1",
              "Infra-WriteApplication2"
            ],
            "Hook-PreConfigDeploy": [
              "Hook-PreConfigDeploy"
            ],
            "Hook-EnactConfigDeploy": [
              "Hook-EnactConfigDeploy"
            ],
            "InfoTask-BundleLogs": [
              "InfoTask-BundleLogs"
            ],
            "Hook-PostInit": [
              "Hook-PostInit"
            ],
            "Hook-PostAppDeploy": [
              "Hook-PostAppDeploy"
            ],
            "InfoTask-SystemTailLogs": [
              "InfoTask-SystemTailLogs"
            ],
            "Infra-WriteTailLogsConf": [
              "Infra-WriteTailLogsConf"
            ],
            "Infra-WritePublishLogsConf": [
              "Infra-WritePublishLogsConf"
            ],
            "_AppInstallReboot": [
              "Hook-PreAppDeploy"
            ]
          },
          "Infra-WriteLeaderTestScript": {
            "files": {
              "\/opt\/elasticbeanstalk\/bin\/leader-test.sh": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "#!\/bin\/bash",
                      "\n",
                      "if [[ \"$EB_IS_COMMAND_LEADER\" == \"true\" ]]; then ",
                      "\n",
                      "  exit 0 ",
                      "\n",
                      "else  ",
                      "\n",
                      "  exit 1 ",
                      "\n",
                      "fi ",
                      "\n"
                    ]
                  ]
                },
                "mode": "000755"
              }
            }
          },
          "DockerContainerInstallHooksPkg": {
            "sources": {
              "\/opt\/elasticbeanstalk": "https:\/\/s3.amazonaws.com\/elasticbeanstalk-env-resources-us-east-1\/stalks\/eb_docker_2.11.2\/lib\/hooks.tar.gz"
            }
          },
          "Hook-PreRestartAppServer": {
            "commands": {
              "hooks": {
                "command": "directoryHooksExecutor.py --path \/opt\/elasticbeanstalk\/hooks\/restartappserver\/pre\/"
              }
            }
          },
          "DockerContainerInstallSystemTailLogsConf": {
            "files": {
              "\/opt\/elasticbeanstalk\/tasks\/systemtaillogs.d\/docker.conf": {
                "content": {
                  "Fn::Join": [
                    "\n",
                    [
                      "\/var\/log\/eb-docker\/containers\/eb-current-app\/*.log",
                      "\/var\/log\/docker-events.log",
                      "\/var\/log\/docker-ps.log",
                      "\/var\/log\/nginx\/*.log",
                      ""
                    ]
                  ]
                },
                "mode": "000644"
              }
            }
          },
          "DockerContainerInstallPublishLogsConf": {
            "files": {
              "\/opt\/elasticbeanstalk\/tasks\/publishlogs.d\/docker.conf": {
                "content": {
                  "Fn::Join": [
                    "\n",
                    [
                      "\/var\/log\/eb-docker\/containers\/eb-current-app\/*.gz",
                      "\/var\/log\/docker-events.log*.gz",
                      "\/var\/log\/docker-ps.log*.gz",
                      "\/var\/log\/nginx\/*.gz",
                      ""
                    ]
                  ]
                },
                "mode": "000644"
              }
            }
          },
          "Hook-EnactRestartAppServer": {
            "commands": {
              "hooks": {
                "command": "directoryHooksExecutor.py --path \/opt\/elasticbeanstalk\/hooks\/restartappserver\/enact\/"
              }
            }
          },
          "Infra-WriteSystemTailLogsConf": {
            "files": {
              "\/opt\/elasticbeanstalk\/tasks\/systemtaillogs.d\/eb-version-deployment.conf": {
                "content": {
                  "Fn::Join": [
                    "\n",
                    [
                      "\/var\/log\/eb-version-deployment.log",
                      ""
                    ]
                  ]
                }
              },
              "\/opt\/elasticbeanstalk\/tasks\/systemtaillogs.d\/eb-system.conf": {
                "content": {
                  "Fn::Join": [
                    "\n",
                    [
                      "\/var\/log\/eb-cfn-hup-call.log",
                      "\/var\/log\/eb-cfn-init-call.log",
                      "\/var\/log\/eb-cfn-init.log",
                      "\/var\/log\/eb-tools.log",
                      "\/var\/log\/eb-publish-logs.log",
                      "\/var\/log\/directory-hooks-executor.log",
                      ""
                    ]
                  ]
                },
                "mode": "000644"
              },
              "\/opt\/elasticbeanstalk\/tasks\/systemtaillogs.d\/system.conf": {
                "content": {
                  "Fn::Join": [
                    "\n",
                    [
                      "\/var\/log\/cron",
                      "\/var\/log\/messages",
                      "\/var\/log\/yum.log",
                      ""
                    ]
                  ]
                },
                "mode": "000644"
              },
              "\/opt\/elasticbeanstalk\/tasks\/systemtaillogs.d\/cloud-init-system.conf": {
                "content": {
                  "Fn::Join": [
                    "\n",
                    [
                      "\/var\/log\/cloud-init.log",
                      ""
                    ]
                  ]
                },
                "mode": "000644"
              },
              "\/opt\/elasticbeanstalk\/tasks\/systemtaillogs.d\/cfn-system.conf": {
                "content": {
                  "Fn::Join": [
                    "\n",
                    [
                      "\/var\/log\/cfn-hup.log",
                      "\/var\/log\/cfn-init.log",
                      ""
                    ]
                  ]
                },
                "mode": "000644"
              }
            }
          },
          "Hook-PostRestartAppServer": {
            "commands": {
              "hooks": {
                "command": "directoryHooksExecutor.py --path \/opt\/elasticbeanstalk\/hooks\/restartappserver\/post\/"
              }
            }
          },
          "Infra-WriteRuntimeConfig": {
            "commands": {
              "02writeappsource": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "getMetadata.py --path AWS::ElasticBeanstalk::Ext._AppSourceUrlFileContent > \/opt\/elasticbeanstalk\/deploy\/configuration\/appsourceurl"
                    ]
                  ]
                }
              },
              "03writeconfig": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "getMetadata.py --path AWS::ElasticBeanstalk::Ext._ContainerConfigFileContent > \/opt\/elasticbeanstalk\/deploy\/configuration\/containerconfiguration"
                    ]
                  ]
                }
              },
              "01mkdir": {
                "command": "rm -rf \/opt\/elasticbeanstalk\/deploy\/configuration; mkdir -p \/opt\/elasticbeanstalk\/deploy\/configuration"
              },
              "04setperms": {
                "command": "\/bin\/chmod og-rwx \/opt\/elasticbeanstalk\/deploy\/configuration\/containerconfiguration"
              }
            }
          },
          "Hook-PreInit": {
            "commands": {
              "hooks": {
                "command": "directoryHooksExecutor.py --path \/opt\/elasticbeanstalk\/hooks\/preinit\/"
              }
            }
          },
          "Infra-WritePublishLogsCron": {
            "files": {
              "\/etc\/cron.d\/publishlogs": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "SHELL=\/bin\/bash",
                      "\n",
                      "PATH=\/sbin:\/bin:\/usr\/sbin:\/usr\/bin",
                      "\n",
                      "MAILTO=root",
                      "\n",
                      "HOME=\/",
                      "\n",
                      "10,30,50 * * * * root ",
                      "publishLogs.py --de-dupe --conf-path '\/opt\/elasticbeanstalk\/tasks\/publishlogs.d\/*' --location-prefix ",
                      {
                        "Fn::FindInMap": [
                          "EnvironmentInfoTasks",
                          "publish",
                          "LocationPrefix"
                        ]
                      },
                      " --num-concurrent 2",
                      "\n",
                      "05,25,45 * * * * root ",
                      "clearStaleLogPublishingRecords.py",
                      "\n"
                    ]
                  ]
                },
                "mode": "000644"
              }
            }
          },
          "AWSEBBaseConfig": {
            "files": {
              "\/etc\/elasticbeanstalk\/.aws-eb-stack.properties": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "environment_id=fullfilment",
                      "\n",
                      "environment_bucket=",
                      "\n",
                      "stack_name=",
                      {
                        "Ref": "AWS::StackId"
                      },
                      "\n",
                      "resource=",
                      "AWSEBAutoScalingGroup",
                      "\n",
                      "region=",
                      {
                        "Ref": "AWS::Region"
                      },
                      "\n\n"
                    ]
                  ]
                },
                "owner": "root",
                "group": "root",
                "mode": "000440"
              },
              "\/etc\/cfn\/cfn-hup.conf": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "[main]",
                      "\n",
                      "stack=",
                      {
                        "Ref": "AWS::StackId"
                      },
                      "\n",
                      "region=",
                      {
                        "Ref": "AWS::Region"
                      },
                      "\n"
                    ]
                  ]
                },
                "owner": "root",
                "group": "root",
                "mode": "000400"
              },
              "\/etc\/cfn\/hooks.d\/aws-eb-command-handler.conf": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "[aws-eb-command-handler]",
                      "\n",
                      "triggers=on.command",
                      "\n",
                      "path=ElasticBeanstalkCommand-",
                      "AWSEBAutoScalingGroup",
                      "\n",
                      "action=commandWrapper.py",
                      "\n"
                    ]
                  ]
                }
              }
            },
            "commands": {
              "clearbackupfiles": {
                "command": "rm -f \/etc\/cfn\/hooks.d\/*.bak"
              }
            }
          },
          "InfoTask-TailLogs": {
            "commands": {
              "taillogs": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "tailLogs.py --concatenate --conf-path '\/opt\/elasticbeanstalk\/tasks\/taillogs.d\/*' --location-prefix ",
                      {
                        "Fn::FindInMap": [
                          "EnvironmentInfoTasks",
                          "tail",
                          "LocationPrefix"
                        ]
                      }
                    ]
                  ]
                }
              }
            }
          },
          "Hook-EnactConfigDeploy": {
            "commands": {
              "hooks": {
                "command": "directoryHooksExecutor.py --path \/opt\/elasticbeanstalk\/hooks\/configdeploy\/enact\/"
              }
            }
          },
          "Hook-PreConfigDeploy": {
            "commands": {
              "hooks": {
                "command": "directoryHooksExecutor.py --path \/opt\/elasticbeanstalk\/hooks\/configdeploy\/pre\/"
              }
            }
          },
          "InfoTask-BundleLogs": {
            "commands": {
              "bundlelogs": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "bundleLogs.py --conf-path '\/opt\/elasticbeanstalk\/tasks\/bundlelogs.d\/*' --location-prefix ",
                      {
                        "Fn::FindInMap": [
                          "EnvironmentInfoTasks",
                          "bundle",
                          "LocationPrefix"
                        ]
                      }
                    ]
                  ]
                }
              }
            }
          },
          "Hook-PostInit": {
            "commands": {
              "hooks": {
                "command": "directoryHooksExecutor.py --path \/opt\/elasticbeanstalk\/hooks\/postinit\/"
              }
            }
          },
          "DockerContainerInstallTailLogsConf": {
            "files": {
              "\/opt\/elasticbeanstalk\/tasks\/taillogs.d\/docker.conf": {
                "content": {
                  "Fn::Join": [
                    "\n",
                    [
                      "\/var\/log\/eb-docker\/containers\/eb-current-app\/*.log",
                      "\/var\/log\/docker-events.log",
                      "\/var\/log\/docker-ps.log",
                      "\/var\/log\/nginx\/*.log",
                      ""
                    ]
                  ]
                },
                "mode": "000644"
              }
            }
          },
          "LockRepoToGuid": {
            "files": {
              "\/etc\/yum\/vars\/guid": {
                "content": "101d655db21e",
                "mode": "000644"
              }
            },
            "commands": {
              "03yumRepoMetaClean": {
                "command": "yum clean all"
              },
              "01cloudTemplates": {
                "command": "sed -i -r 's\/mirror.list$\/mirror.list-\\$guid\/' \/etc\/cloud\/templates\/amzn-updates.repo.tmpl"
              },
              "02yumRepos": {
                "command": "sed -i -r 's\/mirror.list$\/mirror.list-$guid\/' \/etc\/yum.repos.d\/amzn-updates.repo"
              },
              "04UpdateOpenssl": {
                "command": "yum update -y openssl"
              }
            }
          },
          "Hook-PostAppDeploy": {
            "commands": {
              "hooks": {
                "command": "directoryHooksExecutor.py --path \/opt\/elasticbeanstalk\/hooks\/appdeploy\/post\/"
              }
            }
          },
          "InfoTask-SystemTailLogs": {
            "commands": {
              "systemtaillogs": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "tailLogs.py --conf-path '\/opt\/elasticbeanstalk\/tasks\/systemtaillogs.d\/*' --location-prefix ",
                      {
                        "Fn::FindInMap": [
                          "EnvironmentInfoTasks",
                          "systemtail",
                          "LocationPrefix"
                        ]
                      }
                    ]
                  ]
                }
              }
            }
          },
          "Infra-WriteTailLogsConf": {
            "files": {
              "\/opt\/elasticbeanstalk\/tasks\/taillogs.d\/cfn-system.conf": {
                "content": {
                  "Fn::Join": [
                    "\n",
                    [
                      "\/var\/log\/cfn-hup.log",
                      "\/var\/log\/cfn-init.log",
                      ""
                    ]
                  ]
                },
                "mode": "000644"
              },
              "\/opt\/elasticbeanstalk\/tasks\/taillogs.d\/eb-version-deployment.conf": {
                "content": {
                  "Fn::Join": [
                    "\n",
                    [
                      "\/var\/log\/eb-version-deployment.log",
                      ""
                    ]
                  ]
                }
              },
              "\/opt\/elasticbeanstalk\/tasks\/taillogs.d\/eb-system.conf": {
                "content": {
                  "Fn::Join": [
                    "\n",
                    [
                      "\/var\/log\/eb-cfn-hup-call.log",
                      "\/var\/log\/eb-cfn-init-call.log",
                      "\/var\/log\/eb-cfn-init.log",
                      "\/var\/log\/eb-tools.log",
                      "\/var\/log\/eb-publish-logs.log",
                      "\/var\/log\/directory-hooks-executor.log",
                      ""
                    ]
                  ]
                },
                "mode": "000644"
              }
            }
          },
          "Infra-WritePublishLogsConf": {
            "files": {
              
            }
          },
          "AWSEBCfnHup": {
            "services": {
              "sysvinit": {
                "cfn-hup": {
                  "ensureRunning": "true"
                }
              }
            }
          }
        }
      },
      "DependsOn": "AWSEBBeanstalkMetadata",
      "Properties": {
        "Tags": [
          {
            "PropagateAtLaunch": true,
            "Value": "fullfilment",
            "Key": "elasticbeanstalk:environment-name"
          },
          {
            "PropagateAtLaunch": true,
            "Value": "fullfilment",
            "Key": "Name"
          },
          {
            "PropagateAtLaunch": true,
            "Value": "fullfilment",
            "Key": "elasticbeanstalk:environment-id"
          }
        ],
        "AvailabilityZones": [
          "us-east-1c",
          "us-east-1b",
          "us-east-1e"
        ],
        "MaxSize": 1,
        "Cooldown": "360",
        "LaunchConfigurationName": {
          "Ref": "AWSEBAutoScalingLaunchConfiguration"
        },
        "MinSize": 1
      }
    },
    "AWSEBSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "SecurityGroup for ElasticBeanstalk environment."
      }
    },
    "AWSEBInstanceLaunchWaitHandle": {
      "Type": "AWS::CloudFormation::WaitConditionHandle"
    },
    "AWSEBSecurityGroupSSHIngress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "GroupName": {
          "Ref": "AWSEBSecurityGroup"
        },
        "ToPort": "22",
        "FromPort": "22",
        "CidrIp": "0.0.0.0\/0"
      }
    },
    "AWSEBBeanstalkMetadata": {
      "Type": "AWS::CloudFormation::WaitConditionHandle",
      "Metadata": {
        "AWS::ElasticBeanstalk::Ext": {
          "Parameters": {
            "DockerRPM": {
              "Ref": "DockerRPM"
            },
            "InstanceType": {
              "Ref": "InstanceType"
            },
            "DockerProxyServer": {
              "Ref": "DockerProxyServer"
            },
            "DockerDEB": {
              "Ref": "DockerDEB"
            },
            "AppSource": {
              "Ref": "AppSource"
            },
            "EnvironmentVariables": {
              "Ref": "EnvironmentVariables"
            }
          }
        },
        "AWS::ElasticBeanstalk::Metadata": {
          "Name": "e-fucvpi5vsv",
          "EnvironmentName": "fulfillment-env",
          "Description": "TemplatePack for environment: fulfillment-env",
          "DateCreated": "2014-06-26T22:50:19",
          "DateUpdated": "2014-06-26T22:50:19",
          "EnvironmentId": "e-fucvpi5vsv",
          "Version": "3ea3f698-fd84-11e3-8f55-7d1a7a083030"
        }
      }
    }
  }
}
